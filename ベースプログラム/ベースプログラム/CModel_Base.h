//***********************************************************************************************************
//
// 3Dモデル描画基本クラス
//
//***********************************************************************************************************
#pragma once

//***********************************************************************************************************
//インクルード部
//***********************************************************************************************************
#include "Define.h"
#include "CDirectX.h"
#include "CInput.h"
#include "CSound.h"

#include "Debug_DataSave.h"

//***********************************************************************************************************
//構造体定義
//***********************************************************************************************************
typedef struct
{
	D3DXMATRIX			World_Matrix;	// ワールドマトリクス

	D3DXMATRIX			Trans_Matrix;	// 移動
	D3DXMATRIX			Rotate_Matrix;	// 回転
	D3DXMATRIX			Scale_Matrix;	// 拡大
	
	D3DXVECTOR3			Model_Pos;		// モデル座標
	D3DXVECTOR3			Model_Rot;		// モデル回転角度
	D3DXVECTOR3			Model_Scale;	// モデル拡大率

	D3DMATERIAL9		Model_Color;	// モデル色諸々
}MODEL_DATA;

//***********************************************************************************************************
//クラス定義
//***********************************************************************************************************
class CModel_Base
{
private:
	LPDIRECT3DTEXTURE9*	pTexture;				// テクスチャへのポインタ
	LPD3DXMESH			pD3DXMesh;				//
	LPD3DXBUFFER		pD3DXBuffMat;			//
	DWORD				nNumMat;				//
	D3DXMATERIAL*		pD3DXMat;				//
	D3DMATERIAL9*		pMaterial;				// マテリアル

protected:
	MODEL_DATA*			Model_Data;				// モデル情報まとめ構造体
	int					nObject_Num;			// モデルを何個生成するか？( 基本は1を入れておいてください )
	bool				bUse_Texture;			// テクスチャを使用するかどうか指定

public:
	virtual void		Init( char* X_FILE );	// 初期化
	virtual void		Finalise();				// 終了
	virtual void		Update();				// 更新
	virtual void		Draw();					// 描画

	CModel_Base();								// コンストラクタ
	virtual ~CModel_Base();						// デストラクタ
};

//***********************************************************************************************************
// EOF
//***********************************************************************************************************