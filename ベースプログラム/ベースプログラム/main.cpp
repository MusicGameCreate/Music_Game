//***********************************************************************************************************
// インクルード部
//***********************************************************************************************************
#include "Define.h"	
#include "CWindowAPI.h"		// WindowAPI情報
#include "CDirectX.h"		// DirectX情報
#include "CFPS.h"			// FPS情報
#include "CInput.h"			// キーボード、マウス情報
#include "Camera.h"			// カメラ情報
#include "CLight.h"			// ライト情報
#include "SceneMgr.h"		// シーン情報
#include "CMusic_Manager.h"	// 曲情報

//#define _ITERATOR_DEBUG_LEVEL (0)

//***********************************************************************************************************
//
// メイン関数
//
//***********************************************************************************************************
int APIENTRY WinMain( HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow )
{
	//*******************************************************************************************************
	// クラス定義
	//*******************************************************************************************************
	CWindowAPI		WindowAPI;		// WindowAPIクラス
	CDirectX		DirectX;		// DirectXクラス
	CInput			Input;			// キーボード、マウスクラス
	CFPS			FPS;			// FPSクラス
	CCamera			Camera;			// カメラクラス
	CLight			Light;			// 光源クラス
	CMusic_Manager	Music_Manager;	// 曲データ一括管理クラス

	//*******************************************************************************************************
	// 各種設定オール初期化
	//*******************************************************************************************************
	WindowAPI.Init( hInstance );					// WindowAPI情報
	DirectX.Init( WindowAPI.GethWnd() ,true );		// DirectX情報
	Input.Init( hInstance, WindowAPI.GethWnd() );	// キーボード、マウス情報
	FPS.Init( DirectX.Get_pD3DDevice() );			// FPS情報
	Music_Manager.Init();							// 曲情報
	Music_Manager.Load();							// 曲情報読み込み
	Camera.Init();									// カメラ情報
	Light.Init();									// ライト情報
	CSceneMgr		SceneMgr;		// シーン一括管理クラス
	SceneMgr.Initialize();							// シーン情報

	// ウインドウの表示(初期化処理の後に行う)
	//*******************************************************************************************************
	WindowAPI.Display( nCmdShow );

	// メッセージループ
	//*******************************************************************************************************
	while( WindowAPI.WindowMessage() != 1 )
	{
		// ウインドウ情報更新
		WindowAPI.Update();

		if ( FPS.Update() == true )
		{
			// 描画開始
			//***********************************************************************************************
			DirectX.Render_Begin();

			// キーボード、マウス情報更新
			Input.Update();
			// カメラ情報更新
			Camera.Update();
			// ライト情報更新
			Light.Update();
			// カメラセット
			Camera.Set();

			// シーン更新
			SceneMgr.Update();

			// シーン描画
			SceneMgr.Draw();

//#ifdef _DEBUG
			// FPS描画
			FPS.Draw();
//#endif
			// 描画終了
			//***********************************************************************************************
			DirectX.Render_End();
		}
	}

	//*******************************************************************************************************
	// 各種設定オール開放
	//*******************************************************************************************************
	SceneMgr.Finalize();
	WindowAPI.Finalise( hInstance );	// ウインドウクラスの登録を解除
	DirectX.Finalise();					// DirectX情報解放
	Input.Finalise();					// キーボード、マウス情報解放
	FPS.Finalise();						// FPS情報の終了処理
	Camera.Finalise();					// カメラ情報解放
	Music_Manager.Finalise();			// 曲情報解放

	return (int)WindowAPI.Getmsg().wParam;
}

//***********************************************************************************************************
// EOF
//***********************************************************************************************************