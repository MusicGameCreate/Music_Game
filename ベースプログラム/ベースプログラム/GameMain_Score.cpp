//***********************************************************************************************************
// インクルード部
//***********************************************************************************************************
#include "GameMain_Score.h"

//***********************************************************************************************************
// コンストラクタ
//***********************************************************************************************************
GameMain_Score::GameMain_Score()
{
	// オブジェクトを何個生成するか？(最低 1〜)
	//*******************************************************************************************************
	nObject_Num = 7;

	// テクスチャを何種類使用するか？(最低 1〜)
	//*******************************************************************************************************
	nUse_Texture_Num = 1;

	// オブジェクトの個数分、必要なサイズを確保
	Tex_2D_Data = new TEXTURE_2D_DATA[nObject_Num];

	for (int i = 0; i < nObject_Num; i++)
	{
		// 座標(画像の中心を原点)
		Tex_2D_Data[i].Obj_Pos = D3DXVECTOR3(810.0f + 40.0f * i, 42.0f, 0.0f);

		// オブジェクトのサイズ(X,Y)
		Tex_2D_Data[i].Obj_Size = D3DXVECTOR2(50, 50);

		// テクスチャ座標(0.0f〜1.0f)
		Tex_2D_Data[i].Tex_Pos = D3DXVECTOR2(0.0f, 0.0f);

		// 1アニメーション毎のテクスチャ座標(0.0f〜1.0f)
		Tex_2D_Data[i].Tex_Anim = D3DXVECTOR2(0.1f, 1.0f);

		// 画像のRGBA値
		Tex_2D_Data[i].Red =
		Tex_2D_Data[i].Green =
		Tex_2D_Data[i].Brue =
		Tex_2D_Data[i].Alpha = 255;

		// 画像の拡大率(0.0f〜)
		Tex_2D_Data[i].fScale = 1.0f;

		// 画像の回転角度(0.0f〜)
		Tex_2D_Data[i].fRot = 0.0f;
	}

	// 右三桁は少し小さくする
	Tex_2D_Data[4].Obj_Size = Tex_2D_Data[5].Obj_Size = Tex_2D_Data[6].Obj_Size = D3DXVECTOR2(30, 30);
	
	Tex_2D_Data[4].Obj_Pos.x -= 8.0f;
	Tex_2D_Data[5].Obj_Pos.x -= 20.0f;
	Tex_2D_Data[6].Obj_Pos.x -= 32.0f;

	Tex_2D_Data[4].Obj_Pos.y += 10.0f;
	Tex_2D_Data[5].Obj_Pos.y += 10.0f;
	Tex_2D_Data[6].Obj_Pos.y += 10.0f;

	// 現在プレイ中のスコアを初期化
	//*******************************************************************************************************
	nNow_Score = 0;

	CTexture_2D_Base::Init();

	CTexture_2D_Base::Load_Texture("../DATA/TEXTURE/共通使用/NUMBER.png", 0);
}

//***********************************************************************************************************
// デストラクタ
//***********************************************************************************************************
GameMain_Score::~GameMain_Score()
{
	CTexture_2D_Base::Finalise();
}

//***********************************************************************************************************
// void GameMain_Back::Update
// 説明：更新処理
// 引数：なし　戻り値：なし
//***********************************************************************************************************
void GameMain_Score::Update()
{
	
	CTexture_2D_Base::Update();
}

//***********************************************************************************************************
// void GameMain_Back::Draw
// 説明：描画処理
// 引数：なし　戻り値：なし
//***********************************************************************************************************
void GameMain_Score::Draw()
{
	for ( int i = 0 ; i < nObject_Num ; i ++ )
	{
		CTexture_2D_Base::Draw(i, 0);
	}
}

void GameMain_Score::SetScore(int score)
{
	int nNum;

	if (nNow_Score == score)
		return;

	nNow_Score = score;

	// スコア最大値設定
	//*******************************************************************************************************
	if (nNow_Score > 1000000)
		nNow_Score = 1000000;

	for (int i = 0; i < nObject_Num; i++)
	{
		switch (i)
		{
		case 0:	// 百万の位
			nNum = nNow_Score / 1000000;
			break;

		case 1:	// 十万の位
			nNum = nNow_Score % 1000000 / 100000;
			break;

		case 2:	// 万の位
			nNum = nNow_Score % 1000000 % 100000 / 10000;
			break;

		case 3:	// 千の位
			nNum = nNow_Score % 1000000 % 100000 % 10000 / 1000;
			break;

		case 4:	// 百の位
			nNum = nNow_Score % 1000000 % 100000 % 10000 % 1000 / 100;
			break;

		case 5:	// 十の位
			nNum = nNow_Score % 1000000 % 100000 % 10000 % 1000 % 100 / 10;
			break;

		case 6:	// 一の位
			nNum = nNow_Score % 1000000 % 100000 % 10000 % 1000 % 100 % 10 / 1;
			break;
		}

		// 数字に対応したテクスチャ座標をセット
		//*****************************************************************
		Tex_2D_Data[i].Tex_Pos.x = nNum * 0.1f;
	}

}